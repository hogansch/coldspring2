# Generated by Django 2.2.9 on 2020-01-05 06:12

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtailimages', '0001_squashed_0021'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnouncementPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('content', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.StructBlock([('richtext_content', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'hr', 'link', 'document_link', 'center', 'font_color'], label='Text Content', required=True)), ('bg_color', wagtail.core.blocks.ChoiceBlock(choices=[('white', 'White'), ('lightgray', 'Light Gray')], label='Background Color'))])), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('bg_color', wagtail.core.blocks.ChoiceBlock(choices=[('white', 'White'), ('lightgray', 'Light Gray')], label='Background Color')), ('image_position', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('center', 'Center')], label='Image Position'))], icon='image')), ('textimagesidebyside', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('bg_color', wagtail.core.blocks.ChoiceBlock(choices=[('white', 'White'), ('lightgray', 'LightGray')], label='Background Color')), ('position', wagtail.core.blocks.ChoiceBlock(choices=[('text_on_left', 'Text on Left'), ('text_on_right', 'Text on Right')], label='Text / Image Positioning')), ('vertical_position', wagtail.core.blocks.ChoiceBlock(choices=[('middle', 'Vertically Centered Content Within Section'), ('top', 'Content Starts at Top of Section')], label='Content Vertical Orientation'))])), ('textimagewrap', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('bg_color', wagtail.core.blocks.ChoiceBlock(choices=[('white', 'White'), ('lightgray', 'LightGray')], label='Background Color')), ('position', wagtail.core.blocks.ChoiceBlock(choices=[('image_on_left', 'Image on Left'), ('image_on_right', 'Image on Right')], label='Text / Image Positioning'))]))], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TextAndImagePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('submenutitle', models.CharField(max_length=255, null=True, verbose_name='Submenu title')),
                ('content', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.StructBlock([('richtext_content', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'hr', 'link', 'document_link', 'center', 'font_color'], label='Text Content', required=True)), ('bg_color', wagtail.core.blocks.ChoiceBlock(choices=[('white', 'White'), ('lightgray', 'Light Gray')], label='Background Color'))])), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('bg_color', wagtail.core.blocks.ChoiceBlock(choices=[('white', 'White'), ('lightgray', 'Light Gray')], label='Background Color')), ('image_position', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('center', 'Center')], label='Image Position'))], icon='image')), ('textimagesidebyside', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('bg_color', wagtail.core.blocks.ChoiceBlock(choices=[('white', 'White'), ('lightgray', 'LightGray')], label='Background Color')), ('position', wagtail.core.blocks.ChoiceBlock(choices=[('text_on_left', 'Text on Left'), ('text_on_right', 'Text on Right')], label='Text / Image Positioning')), ('vertical_position', wagtail.core.blocks.ChoiceBlock(choices=[('middle', 'Vertically Centered Content Within Section'), ('top', 'Content Starts at Top of Section')], label='Content Vertical Orientation'))])), ('textimagewrap', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('bg_color', wagtail.core.blocks.ChoiceBlock(choices=[('white', 'White'), ('lightgray', 'LightGray')], label='Background Color')), ('position', wagtail.core.blocks.ChoiceBlock(choices=[('image_on_left', 'Image on Left'), ('image_on_right', 'Image on Right')], label='Text / Image Positioning'))]))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AnnouncementPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='stream.AnnouncementPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
